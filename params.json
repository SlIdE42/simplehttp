{
  "name": "Simplehttp",
  "tagline": "HTTP client for Elixir without dependencies",
  "body": "# SimpleHttp [![Travis](https://travis-ci.org/alexandrubagu/simplehttp.svg)](https://travis-ci.org/alexandrubagu/simplehttp) [![Hex.pm](https://img.shields.io/hexpm/v/simplehttp.svg?maxAge=2592000)](https://hex.pm/packages/simplehttp) [![Hex.pm](https://img.shields.io/hexpm/dt/simplehttp.svg?maxAge=2592000)](https://hex.pm/packages/simplehttp) [![Hex.pm](https://img.shields.io/hexpm/l/simplehttp.svg?maxAge=2592000)](https://hex.pm/packages/simplehttp)\r\n\r\n## Description\r\n\r\n###**Unlike other projects / libraries, SimpleHttp doesn't have other dependencies**\r\n\r\n```\r\n$ mix app.tree\r\n\r\nsimplehttp\r\n├── elixir\r\n└── logger\r\n    └── elixir\r\n```\r\n\r\n###Other libraries:\r\nDependencies tree for [myfreeweb/httpotion](https://github.com/myfreeweb/httpotion) \r\n```\r\n$ mix app.tree                          \r\n\r\nhttpotion\r\n├── elixir\r\n├── ssl\r\n│   ├── crypto\r\n│   └── public_key\r\n│       ├── asn1\r\n│       └── crypto\r\n└── ibrowse\r\n```\r\n\r\nDependencies tree for [edgurgel/httpoison](https://github.com/edgurgel/httpoison)\r\n```\r\n$ mix app.tree                          \r\n\r\nhttpoison\r\n├── elixir\r\n└── hackney\r\n    ├── crypto\r\n    ├── asn1\r\n    ├── public_key\r\n    │   ├── asn1\r\n    │   └── crypto\r\n    ├── ssl\r\n    │   ├── crypto\r\n    │   └── public_key\r\n    ├── idna\r\n    ├── mimerl\r\n    ├── certifi\r\n    ├── ssl_verify_fun\r\n    │   └── ssl\r\n    └── metrics\r\n```\r\n\r\n\r\n## Hex Installation \r\n\r\n  1. Add `simplehttp` to your list of dependencies in `mix.exs`:\r\n\r\n    ```elixir\r\n    def deps do\r\n      [{:simplehttp, \"~> 0.1.0\"}]\r\n    end\r\n    ```\r\n\r\n  2. Ensure `simplehttp` is started before your application:\r\n\r\n    ```elixir\r\n    def application do\r\n      [applications: [:simplehttp]]\r\n    end\r\n    ```\r\n\r\n## Usage\r\n\r\n*Note*:You can load HTTPotion into the Elixir REPL by executing this command from the root of your project:\r\n\r\n```elixir\r\n$ iex -S mix\r\n```\r\n\r\n*Note* **Before you start to make a request you need to start inet, this can be do calling this function:**\r\n\r\n```elixir\r\nSimpleHttp.start\r\n```\r\n\r\nSimple GET Request\r\n```elixir\r\n    {:ok, response} = SimpleHttp.get \"http://jsonplaceholder.typicode.com/posts/1\"\r\n\r\n    IO.inspect response.status \r\n    ~s\"\"\"\r\n        {'HTTP/1.1', 200, 'OK'}\r\n    \"\"\"\r\n\r\n    IO.inspect response.headers\r\n    ~s\"\"\"\r\n   \t\t[{'cache-control', 'public, max-age=14400'}, {'connection', 'keep-alive'},\r\n\t\t {'content-length', '292'}, {'content-type', 'application/json; charset=utf-8'},\r\n\t\t {'expires', 'Wed, 31 Aug 2016 22:15:00 GMT'},\r\n\t\t {'set-cookie',\r\n\t\t  '__cfduid=d42; expires=Thu, 31-Aug-17 18:15:00 GMT; path=/; domain=.typicode.com; HttpOnly'},\r\n\t\t {'cf-ray', '2db27722e62f0479-FRA'}] \r\n    \"\"\"   \r\n\r\n    IO.puts response.body\r\n\t~s\"\"\"\r\n\t\t{\r\n\t\t  \"userId\": 1,\r\n\t\t  \"id\": 1,\r\n\t\t  \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\r\n\t\t  \"body\": \"bla bla\"\r\n\t\t}\r\n\t\"\"\"\r\n\r\n```\r\n\r\nGET Request with query params\r\n```elixir\r\n    {:ok, response} = SimpleHttp.get \"http://jsonplaceholder.typicode.com/posts/1\", [\r\n      query_params: [\r\n        postId: 1\r\n      ]\r\n    ]\r\n\r\n    IO.inspect response.status \r\n    IO.inspect response.headers\r\n    IO.puts response.body\r\n```\r\n\r\nPOST with JSON\r\n```elixir\r\n    {:ok, response} = SimpleHttp.post \"http://jsonplaceholder.typicode.com/posts\", [\r\n      body: \"{\\\"name\\\":\\\"foo.example.com\\\"}\",\r\n      content_type: \"application/json\",\r\n      timeout: 1000,\r\n      connect_timeout: 1000\r\n    ]\r\n\r\n    IO.inspect response.status \r\n    IO.inspect response.headers\r\n    IO.puts response.body\r\n```\r\n\r\nPOST with params\r\n```elixir\r\n    {:ok, response} = SimpleHttp.post \"http://jsonplaceholder.typicode.com/posts\", [\r\n      params: [\r\n        title: \"title is present here\",\r\n        message: \"hello world!\"\r\n      ],\r\n      content_type: \"application/x-www-form-urlencoded\",\r\n      timeout: 1000,\r\n      connect_timeout: 1000\r\n    ]\r\n\r\n    IO.inspect response.status \r\n    IO.inspect response.headers\r\n    IO.puts response.body\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}